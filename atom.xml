<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Unsky Blog</title>
  <subtitle>Unsky Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-11-09T11:34:27.918Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>unsky</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>聚类分析</title>
    <link href="http://yoursite.com/2016/11/09/%E8%81%9A%E7%B1%BB%E5%88%86%E6%9E%90/"/>
    <id>http://yoursite.com/2016/11/09/聚类分析/</id>
    <published>2016-11-09T09:33:59.000Z</published>
    <updated>2016-11-09T11:34:27.918Z</updated>
    
    <content type="html"><![CDATA[<p>聚类分析将数据划分成有意义或有用的组（簇）。<br>聚类分析仅根据在数据中发现的描述对象及其关系的信息，将数据对象分组。其目标是，<br>组内的对象相互之间是相似的，而不同组中的对象是不同的。<br> <a id="more"></a></p>
<h1 id="聚类"><a href="#聚类" class="headerlink" title="聚类"></a>聚类</h1><p>一个好的聚类方法要能产生高质量的聚类结果——簇，这些簇要具备以下两个特点：</p>
<ol>
<li>高的簇内相似性</li>
<li>低的簇间相似性</li>
</ol>
<p>聚类结果的好坏取决于该聚类方法采用的相似性评估方法以及该方法的具体实现<br>聚类方法的好坏还取决于该方法是否能发现某些还是所有的隐含模式</p>
<p><img src="/images/clutster/1.png" alt=""></p>
<p>聚类可以分为：</p>
<ol>
<li>划分聚类（Partitional Clustering）</li>
<li>层次聚类（Hierarchical Clustering）</li>
<li>互斥（重叠）聚类（exclusive clustering）</li>
<li>非互斥聚类（non-exclusive）</li>
<li>模糊聚类（fuzzy clustering）</li>
<li>完全聚类（complete clustering）</li>
<li>部分聚类（partial clustering）</li>
</ol>
<h2 id="划分聚类"><a href="#划分聚类" class="headerlink" title="划分聚类"></a>划分聚类</h2><p>划分聚类简单地将数据对象集划分成不重叠的子集，使得每个数据对象恰在一个子集。</p>
<p><img src="/images/clutster/2.png" alt=""></p>
<h2 id="层次聚类"><a href="#层次聚类" class="headerlink" title="层次聚类"></a>层次聚类</h2><p>层次聚类是嵌套簇的集族，组织成一棵树。<br><img src="/images/clutster/3.png" alt=""></p>
<h2 id="互斥聚类（exclusive）"><a href="#互斥聚类（exclusive）" class="headerlink" title="互斥聚类（exclusive）"></a>互斥聚类（exclusive）</h2><p>每个对象都指派到单个簇.</p>
<h2 id="重叠聚类（overlapping）或非互斥聚类（non-exclusive）"><a href="#重叠聚类（overlapping）或非互斥聚类（non-exclusive）" class="headerlink" title="重叠聚类（overlapping）或非互斥聚类（non-exclusive）"></a>重叠聚类（overlapping）或非互斥聚类（non-exclusive）</h2><p>聚类用来反映一个对象.同时属于多个组（类）这一事实。<br>例如：在大学里，一个人可能既是学生，又是雇员</p>
<h2 id="模糊聚类（Fuzzy-clustering-）"><a href="#模糊聚类（Fuzzy-clustering-）" class="headerlink" title="模糊聚类（Fuzzy clustering ）"></a>模糊聚类（Fuzzy clustering ）</h2><p>每个对象以一个0（绝对不属于）和1（绝对属于）之间的隶属权值属于每个簇。<br>换言之，簇被视为模糊集。</p>
<h2 id="部分聚类（Partial）"><a href="#部分聚类（Partial）" class="headerlink" title="部分聚类（Partial）"></a>部分聚类（Partial）</h2><p>部分聚类中数据集某些对象可能不属于明确定义的组。如：一些对象可能是离群点、噪声。</p>
<h2 id="完全聚类（complete）"><a href="#完全聚类（complete）" class="headerlink" title="完全聚类（complete）"></a>完全聚类（complete）</h2><p>完全聚类将每个对象指派到一个簇。</p>
<h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><h2 id="簇的分类"><a href="#簇的分类" class="headerlink" title="簇的分类"></a>簇的分类</h2><p>簇是同一性状物体的集合<br>按照性状的分类不同可以将簇分为</p>
<ol>
<li>明显分离的</li>
</ol>
<p>每个点到同簇中任一点的距离比到不同簇中所有点的距离更近。</p>
<ol>
<li>基于原型的</li>
</ol>
<p>每个对象到定义该簇的原型的距离比到其他簇的原型的距离更近。<br>对于具有连续属性的数据，簇的原型通常是质心，即簇中所有点的平均值。<br>当质心没有意义时，原型通常是中心点，即簇中最有代表性的点。</p>
<p>基于中心的（ Center-Based）的簇：<br>每个点到其簇中心的距离比到任何其他簇中心的距离更近。</p>
<ol>
<li>基于图的</li>
</ol>
<p>如果数据用图表示，其中节点是对象，而边代表对象之间的联系。</p>
<p>簇可以定义为连通分支（connected component）：互相连通但不与组外对象连通的对象组。</p>
<p>基于近邻的（ Contiguity-Based）：其中两个对象是相连的，仅当它们的距离在指定的范围内。这意味着，每个对象到该簇某个对象的距离比到不同簇中任意点的距离更近。</p>
<ol>
<li>基于密度的</li>
</ol>
<p>簇是对象的稠密区域，被低密度的区域环绕。</p>
<ol>
<li>概念簇<br>可以把簇定义为有某种共同性质的对象的集合。<br>例如：基于中心的聚类。还有一些簇的共同性质需要更复杂的算法才能识别出来。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;聚类分析将数据划分成有意义或有用的组（簇）。&lt;br&gt;聚类分析仅根据在数据中发现的描述对象及其关系的信息，将数据对象分组。其目标是，&lt;br&gt;组内的对象相互之间是相似的，而不同组中的对象是不同的。&lt;br&gt;
    
    </summary>
    
      <category term="聚类分析" scheme="http://yoursite.com/categories/%E8%81%9A%E7%B1%BB%E5%88%86%E6%9E%90/"/>
    
    
      <category term="聚类分析" scheme="http://yoursite.com/tags/%E8%81%9A%E7%B1%BB%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>互斥聚类-k-means聚类</title>
    <link href="http://yoursite.com/2016/11/09/k-means%E8%81%9A%E7%B1%BB/"/>
    <id>http://yoursite.com/2016/11/09/k-means聚类/</id>
    <published>2016-11-09T08:56:52.000Z</published>
    <updated>2016-11-09T11:22:59.890Z</updated>
    
    <content type="html"><![CDATA[<p> 在数据挖掘中，K-Means算法是一种cluster analysis的算法，<br> 其主要是来计算数据聚集算法，主要通过不断地取离种子点最近均值的算法。<br> <a id="more"></a></p>
<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>K-Means算法主要解决的问题如下图所示。我们可以看到，在图的左边有一些点，<br>我们用肉眼可以看出来有四个点群，但是我们怎么通过计算机程序找出这几个点群来呢？<br>于是就出现了我们的K-Means算法。<br><img src="/images/gitblog/1.png" alt=""><br>算法概要<br>如下图所示：<br><img src="/images/gitblog/2.png" alt=""><br>从上图中，我们可以看到，A，B，C，D，E是五个在图中点。<br>而灰色的点是我们的种子点，也就是我们用来找点群的点。有两个种子点，所以K=2。</p>
<p>然后，K-Means的算法如下：</p>
<p>``</p>
<ol>
<li><p>随机在图中取K（这里K=2）个种子点</p>
</li>
<li><p>然后对图中的所有点求到这K个种子点的距离，假如点Pi离种子点Si最近，<br>那么Pi属于Si点群。<br>（上图中，我们可以看到A，B属于上面的种子点，C，D，E属于下面中部的种子点）</p>
</li>
<li>我们要移动种子点到属于他的“点群”的中心。（见图上的第三步）<br>然后重复第2）和第3）步直到，种子点没有移动（我们可以看到图中的第四步上面的种子点聚合了A，B，C，下面的种子点聚合了D，E）。<br>``<br>$$\varUpsilon =\sum_{i=1}^K{||x_i-u||^2}$$</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt; 在数据挖掘中，K-Means算法是一种cluster analysis的算法，&lt;br&gt; 其主要是来计算数据聚集算法，主要通过不断地取离种子点最近均值的算法。&lt;br&gt;
    
    </summary>
    
      <category term="聚类分析" scheme="http://yoursite.com/categories/%E8%81%9A%E7%B1%BB%E5%88%86%E6%9E%90/"/>
    
    
      <category term="机器学习" scheme="http://yoursite.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="k-means" scheme="http://yoursite.com/tags/k-means/"/>
    
      <category term="聚类" scheme="http://yoursite.com/tags/%E8%81%9A%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title>手把手将atom打造成c++/c编程利器</title>
    <link href="http://yoursite.com/2016/11/08/%E6%89%8B%E6%8A%8A%E6%89%8B%E5%B0%86atom%E6%89%93%E9%80%A0%E6%88%90c-c%E7%BC%96%E7%A8%8B%E5%88%A9%E5%99%A8/"/>
    <id>http://yoursite.com/2016/11/08/手把手将atom打造成c-c编程利器/</id>
    <published>2016-11-08T02:31:28.000Z</published>
    <updated>2016-11-09T10:47:34.567Z</updated>
    
    <content type="html"><![CDATA[<p>atom</p>
<p>atom 是github开发得一款自由得编辑器</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;atom&lt;/p&gt;
&lt;p&gt;atom 是github开发得一款自由得编辑器&lt;/p&gt;

    
    </summary>
    
      <category term="环境搭建" scheme="http://yoursite.com/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="atom" scheme="http://yoursite.com/tags/atom/"/>
    
  </entry>
  
  <entry>
    <title>卷积神经网络学习历程</title>
    <link href="http://yoursite.com/2016/11/02/%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B/"/>
    <id>http://yoursite.com/2016/11/02/卷积神经网络学习历程/</id>
    <published>2016-11-01T16:10:30.000Z</published>
    <updated>2016-11-09T10:47:36.309Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="卷积深度网络全剖析" scheme="http://yoursite.com/categories/%E5%8D%B7%E7%A7%AF%E6%B7%B1%E5%BA%A6%E7%BD%91%E7%BB%9C%E5%85%A8%E5%89%96%E6%9E%90/"/>
    
    
      <category term="深度学习" scheme="http://yoursite.com/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="卷积" scheme="http://yoursite.com/tags/%E5%8D%B7%E7%A7%AF/"/>
    
  </entry>
  
  <entry>
    <title>使用hexo快速搭建github pages博客</title>
    <link href="http://yoursite.com/2016/11/01/%E4%BD%BF%E7%94%A8hexo%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAgit%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2016/11/01/使用hexo快速搭建git博客/</id>
    <published>2016-11-01T15:40:13.000Z</published>
    <updated>2016-11-09T10:47:45.049Z</updated>
    
    <content type="html"><![CDATA[<h2 id="github-pages简介"><a href="#github-pages简介" class="headerlink" title=" github pages简介"></a> github pages简介</h2><p><img src="/images/gitblog/githubpages.png" alt=""></p>
<p>Github Pages 是 github 公司提供的免费的静态网站托管服务，用起来方便而且功能强大，不仅没有空间限制，还可以绑定自己的域名。在 <a href="https://pages.github.com/" target="_blank" rel="external">https://pages.github.com/</a> 首页上可以看到很多用 Github Pages 托管的网站，很漂亮。另外很多非常著名的公司和项目也都用这种方式来搭建网站，如微软和 twitter 的网站，还有 谷歌的 Material Design 图标 网站。<br><a id="more"></a></p>
<h2 id="node-js之hexo"><a href="#node-js之hexo" class="headerlink" title=" node.js之hexo"></a> node.js之hexo</h2><p>Node.js®是一个基于Chrome V8 引擎的 JavaScript 运行时。 Node.js 使用高效、轻量级的事件驱动、非阻塞 I/O 模型。Node.js 之生态系统是目前最大的开源包管理系统。</p>
<h2 id="hexo"><a href="#hexo" class="headerlink" title="hexo"></a>hexo</h2><p><img src="/images/gitblog/hexo.png" alt=""><br>Hexo 是高效的静态站点生成框架，她基于 Node.js。 通过 Hexo 你可以轻松地使用 Markdown 编写文章，除了 Markdown 本身的语法之外，还可以使用 Hexo 提供的 标签插件 来快速的插入特定形式的内容。在这篇文章中，假定你已经成功安装了 Hexo，并使用 Hexo 提供的命令创建了一个站点。</p>
<p>hexo出自台湾大学生tommy351之手，是一个基于Node.js的静态博客程序，其编译上百篇文字只需要几秒。hexo生成的静态网页可以直接放到GitHub Pages，BAE，SAE等平台上</p>
<h2 id="hexo之NexT主题"><a href="#hexo之NexT主题" class="headerlink" title=" hexo之NexT主题"></a> hexo之NexT主题</h2><p> 一个很好的基于hexo的主题，在NexT主题里有 scheme小主题的概念，非常棒，简约风格。<br> <img src="/images/gitblog/next.png" alt=""></p>
<h2 id="搭建博客系统"><a href="#搭建博客系统" class="headerlink" title=" 搭建博客系统"></a> 搭建博客系统</h2><p> 首先下载安装node.js <a href="https://nodejs.org/zh-cn/" target="_blank" rel="external">https://nodejs.org/zh-cn/</a></p>
<p>  下载之后打开node.js command prompt<br>  开始下载hexo<br>  运行如下的命令</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-cli -g</div><div class="line">$ hexo init blog</div><div class="line">$ cd blog</div><div class="line">$ npm install</div><div class="line">$ hexo server</div><div class="line"></div><div class="line">#安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</div><div class="line"></div><div class="line">#新建完成后，指定文件夹的目录如下</div><div class="line">.</div><div class="line">├── _config.yml</div><div class="line">├── package.json</div><div class="line">├── scaffolds</div><div class="line">├── scripts</div><div class="line">├── source</div><div class="line">|      ├── _drafts</div><div class="line">|      └── _posts</div><div class="line">└── themes</div></pre></td></tr></table></figure>
<p>  这时候使用<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo s</div></pre></td></tr></table></figure></p>
<p>  就可以打开 localhost: 4000进行访问看到hexo的landspace 就成功了</p>
<p>note：<br><code>如果你的安装了福新阅读器等一些占用4000端口的程序。就会加载不出来。</code></p>
<p>可以更改端口：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo s -p 3600</div></pre></td></tr></table></figure>
<p>安装成功之后可以绑定自己的gitHub.<br>后面的NexT主题安装部分详细见：</p>
<p><a href="http://theme-next.iissnan.com/" target="_blank" rel="external">http://theme-next.iissnan.com/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;github-pages简介&quot;&gt;&lt;a href=&quot;#github-pages简介&quot; class=&quot;headerlink&quot; title=&quot; github pages简介&quot;&gt;&lt;/a&gt; github pages简介&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/images/gitblog/githubpages.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Github Pages 是 github 公司提供的免费的静态网站托管服务，用起来方便而且功能强大，不仅没有空间限制，还可以绑定自己的域名。在 &lt;a href=&quot;https://pages.github.com/&quot;&gt;https://pages.github.com/&lt;/a&gt; 首页上可以看到很多用 Github Pages 托管的网站，很漂亮。另外很多非常著名的公司和项目也都用这种方式来搭建网站，如微软和 twitter 的网站，还有 谷歌的 Material Design 图标 网站。&lt;br&gt;
    
    </summary>
    
      <category term="独立博客搭建" scheme="http://yoursite.com/categories/%E7%8B%AC%E7%AB%8B%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
</feed>
